# Two-Stage U-Net Configuration
# Advanced configuration using U-Net segmentation + classification

experiment_name: "unet_two_stage_experiment"
description: "Two-stage approach: U-Net segmentation followed by ResNet50 classification"
tags: ["unet", "two-stage", "segmentation", "resnet50"]
random_seed: 42

model:
  architecture: "two_stage"
  
  # U-Net segmentation model
  unet_input_size: [512, 512, 1]  # High resolution for segmentation
  unet_filters: [64, 128, 256, 512, 1024]
  unet_dropout_rates: [0.1, 0.1, 0.2, 0.2, 0.3]
  
  # Classification model (operates on segmented regions)
  classification_input_size: [224, 224, 3]  # Standard ImageNet size
  backbone: "resnet50"
  learning_rate: 0.0001

training:
  # Two-stage training approach
  batch_size: 8               # Smaller batch due to higher resolution
  epochs: 30                  # U-Net training epochs
  validation_split: 0.2
  
  optimizer: "adam"
  
  # Learning rate scheduling
  use_lr_schedule: true
  lr_schedule_type: "reduce_on_plateau"
  lr_schedule_params:
    factor: 0.5
    patience: 5
    min_lr: 0.0000001
  
  # Early stopping with longer patience for complex model
  use_early_stopping: true
  early_stopping_patience: 15
  early_stopping_monitor: "val_dice_coefficient"  # U-Net specific metric
  early_stopping_mode: "max"
  
  use_class_weights: true
  use_mixed_precision: true   # Recommended for large models

data:
  train_dir: "chest_xray/train"
  test_dir: "chest_xray/test"
  
  # High resolution for segmentation
  image_size: [512, 512]
  normalize_method: "imagenet"  # Use ImageNet normalization for transfer learning
  
  # Conservative augmentation for medical images
  use_augmentation: true
  augmentation:
    rotation_range: 15        # Conservative rotation
    width_shift_range: 0.1
    height_shift_range: 0.1
    shear_range: 0.1
    zoom_range: 0.1
    horizontal_flip: true
    vertical_flip: false
    fill_mode: "nearest"
  
  # Optimized for large images
  num_workers: 4
  prefetch_buffer: 3
  cache_dataset: true         # Cache for better performance
  class_names: ["NORMAL", "PNEUMONIA"]

paths:
  models_dir: "models/two_stage"
  logs_dir: "logs/two_stage"
  results_dir: "results/two_stage"
  checkpoints_dir: "checkpoints/two_stage"
  model_name_template: "two_stage_{backbone}_{timestamp}"
  create_dirs: true

logging:
  log_level: "INFO"
  log_to_file: true
  log_file: "two_stage_training.log"
  verbose: 1
  
  # Enhanced monitoring for complex training
  use_tensorboard: true
  tensorboard_log_dir: "logs/two_stage"
  tensorboard_histogram_freq: 1
  
  # Optional experiment tracking
  use_wandb: false            # Enable if you have W&B account
  wandb_project: "pneumonia-two-stage"
  
  use_mlflow: false           # Enable if you want MLflow tracking
  mlflow_experiment_name: "two_stage_pneumonia"